@startuml
!theme bluegray
skinparam componentStyle uml2

== Регистрация/Авторизация ==
actor Клиент as client
activate AuthService
database PostgresAuth
database Redis

client --> nginx: Запрос на регистрацию/авторизацию
nginx --> AuthService: Обработка запроса
alt Пользователь зарегистрирован
    AuthService --> PostgresAuth: Добавляет пользователя в базу
end
alt Пользователь уже существует
    AuthService --> Redis: Создает токены и передает в Redis
    AuthService --> nginx: Передает токены клиенту
    nginx --> client: Токены получены
deactivate AuthService

== Поиск фильма ==
activate AsyncApi
database Elastic

client --> nginx: Запрос на поиск фильма
nginx --> AsyncApi: Передача запроса
AsyncApi --> AuthService: Проверка токенов
alt Токены действительны
    AuthService --> AsyncApi: Токены подтверждены
    AsyncApi --> Elastic: Запрос фильмов
    Elastic --> AsyncApi: Фильмы найдены
    AsyncApi --> nginx: Передача результатов
    nginx --> client: Результаты поиска
else Токены недействительны
    AuthService --> AsyncApi: Токены не подтверждены
    AsyncApi --> nginx: Доступ отклонен
    nginx --> client: Доступ отклонен
deactivate AsyncApi
@enduml
